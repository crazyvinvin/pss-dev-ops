name: .NET Core Build & Test

on:
  workflow_call:
    inputs:
      service_name:
        description: 'Name of the service/repository being built (used for path).'
        required: true
        type: string
      dotnet_version:
        description: 'The .NET SDK version to use.'
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        description: 'SonarQube/SonarCloud analysis token.'
        required: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch depth 0 is required for SonarScanner to analyze all history
          fetch-depth: 0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet_version }}

      - name: Install Dependencies
        run: dotnet restore ${{ inputs.service_name }}/${{ inputs.service_name }}.csproj

      - name: Build Project
        run: dotnet build ${{ inputs.service_name }}/${{ inputs.service_name }}.csproj --configuration Release --no-restore

      - name: Run Tests
        # Ensure your test project is named: <Service_Name>.Tests
        run: dotnet test ${{ inputs.service_name }}/${{ inputs.service_name }}.Tests/${{ inputs.service_name }}.Tests.csproj --configuration Release --no-build --logger trx --results-directory "TestResults"
        
      # SonarQube steps are integrated here for continuous code quality
      - name: Install Java for SonarScanner
        # SonarScanner typically requires Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Download SonarScanner
        uses: SonarSource/sonarcloud-github-action@v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            /k:"ridered-${{ inputs.service_name }}"
            /d:sonar.host.url="YOUR_SONARQUBE_URL" # REPLACE
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
            /d:sonar.cs.vscoveragexml.reportsPaths="TestResults/**/*.xml"
            /d:sonar.projectBaseDir="${{ inputs.service_name }}"
            /d:sonar.exclusions="**/*.Tests/**,**/obj/**,**/bin/**"
            /d:sonar.verbose=true